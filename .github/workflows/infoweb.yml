name: CI/CD for AcademiX

on:
  workflow_dispatch:
  push:
    branches:
      - dev        # Runs install and build on dev
      - main       # Runs install, build, and deploy on prod
  pull_request:
    branches:
      - main
      - dev      

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]  # Specify Node.js version

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Install dependencies
      - name: Install dependencies
        working-directory: ./
        run: npm install

      # Build the project
      - name: Build AcademiX Next.js project
        working-directory: ./
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Only deploy if branch is 'main'

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3  

      # Install Vercel CLI
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Pull Vercel Environment Information
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Build Project Artifacts
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Deploy Project Artifacts to Vercel
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Notify Deployment Success
      - name: Notify Deployment Success
        run: echo "AcademiX deployment to Vercel successful!"
